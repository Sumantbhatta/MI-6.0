package com.machinarymgmt.service.dto;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.machinarymgmt.service.api.config.dto.BaseApiResponse;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import org.hibernate.validator.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import jakarta.annotation.Generated;

/**
 * MachinaryMgmtBaseApiResponse
 */
@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)

@JsonIgnoreProperties(
  value = "respType", // ignore manually set respType, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the respType to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "respType", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = DepartmentListResponse.class, name = "DepartmentListResponse"),
  @JsonSubTypes.Type(value = DepartmentResponse.class, name = "DepartmentResponse"),
  @JsonSubTypes.Type(value = DesignationListResponse.class, name = "DesignationListResponse"),
  @JsonSubTypes.Type(value = DesignationResponse.class, name = "DesignationResponse"),
  @JsonSubTypes.Type(value = EmployeeAssignmentListResponse.class, name = "EmployeeAssignmentListResponse"),
  @JsonSubTypes.Type(value = EmployeeAssignmentResponse.class, name = "EmployeeAssignmentResponse"),
  @JsonSubTypes.Type(value = EmployeeListResponse.class, name = "EmployeeListResponse"),
  @JsonSubTypes.Type(value = EmployeeResponse.class, name = "EmployeeResponse"),
  @JsonSubTypes.Type(value = EquipmentCategoryListResponse.class, name = "EquipmentCategoryListResponse"),
  @JsonSubTypes.Type(value = EquipmentCategoryResponse.class, name = "EquipmentCategoryResponse"),
  @JsonSubTypes.Type(value = EquipmentListResponse.class, name = "EquipmentListResponse"),
  @JsonSubTypes.Type(value = EquipmentResponse.class, name = "EquipmentResponse"),
  @JsonSubTypes.Type(value = EquipmentUtilizationListResponse.class, name = "EquipmentUtilizationListResponse"),
  @JsonSubTypes.Type(value = EquipmentUtilizationResponse.class, name = "EquipmentUtilizationResponse"),
  @JsonSubTypes.Type(value = IncidentReportListResponse.class, name = "IncidentReportListResponse"),
  @JsonSubTypes.Type(value = IncidentReportResponse.class, name = "IncidentReportResponse"),
  @JsonSubTypes.Type(value = MaintenanceLogListResponse.class, name = "MaintenanceLogListResponse"),
  @JsonSubTypes.Type(value = MaintenanceLogResponse.class, name = "MaintenanceLogResponse"),
  @JsonSubTypes.Type(value = MaintenancePartUsedListResponse.class, name = "MaintenancePartUsedListResponse"),
  @JsonSubTypes.Type(value = MaintenancePartUsedResponse.class, name = "MaintenancePartUsedResponse"),
  @JsonSubTypes.Type(value = MaintenanceReadingListResponse.class, name = "MaintenanceReadingListResponse"),
  @JsonSubTypes.Type(value = MaintenanceReadingResponse.class, name = "MaintenanceReadingResponse"),
  @JsonSubTypes.Type(value = MakeListResponse.class, name = "MakeListResponse"),
  @JsonSubTypes.Type(value = MakeResponse.class, name = "MakeResponse"),
  @JsonSubTypes.Type(value = MastAnchorageDetailsListResponse.class, name = "MastAnchorageDetailsListResponse"),
  @JsonSubTypes.Type(value = MastAnchorageDetailsResponse.class, name = "MastAnchorageDetailsResponse"),
  @JsonSubTypes.Type(value = MaterialsConsumptionTransactionListResponse.class, name = "MaterialsConsumptionTransactionListResponse"),
  @JsonSubTypes.Type(value = MaterialsConsumptionTransactionResponse.class, name = "MaterialsConsumptionTransactionResponse"),
  @JsonSubTypes.Type(value = ModelListResponse.class, name = "ModelListResponse"),
  @JsonSubTypes.Type(value = ModelResponse.class, name = "ModelResponse"),
  @JsonSubTypes.Type(value = OvertimeReportListResponse.class, name = "OvertimeReportListResponse"),
  @JsonSubTypes.Type(value = OvertimeReportResponse.class, name = "OvertimeReportResponse"),
  @JsonSubTypes.Type(value = PettyCashTransactionListResponse.class, name = "PettyCashTransactionListResponse"),
  @JsonSubTypes.Type(value = PettyCashTransactionResponse.class, name = "PettyCashTransactionResponse"),
  @JsonSubTypes.Type(value = ProjectListResponse.class, name = "ProjectListResponse"),
  @JsonSubTypes.Type(value = ProjectResponse.class, name = "ProjectResponse"),
  @JsonSubTypes.Type(value = StockStatementListResponse.class, name = "StockStatementListResponse"),
  @JsonSubTypes.Type(value = StockStatementResponse.class, name = "StockStatementResponse")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-05-26T16:53:22.870701700+05:30[Asia/Calcutta]", comments = "Generator version: 7.13.0")
public class MachinaryMgmtBaseApiResponse extends BaseApiResponse {

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    return super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MachinaryMgmtBaseApiResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

